name: Push Events

on:
  push:
    branches:
      - dev
      - main

permissions:
  contents: write
  id-token: write
  deployments: write
  pull-requests: write

concurrency:
  group: '${{ github.ref_name }}'
  cancel-in-progress: true

jobs:
  release-please:
    name: Create release
    runs-on: ubuntu-latest
    env:
      prerelease: ${{ github.ref_name == 'dev' }}

    steps:
      - name: 🪙 Convert token
        uses: tibdex/github-app-token@v1
        id: generate_token
        with:
          app_id: ${{ secrets.UGRC_RELEASE_BOT_APP_ID }}
          private_key: ${{ secrets.UGRC_RELEASE_BOT_APP_KEY }}

      - name: ⬇️ Set up code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ steps.generate_token.outputs.token }}

      - name: ⎔ Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: lts/*
          cache: npm

      - name: 📥 Download dependencies
        run: npm ci

      - name: Get Next version
        id: get-next-version
        uses: ./
        with:
          prerelease: ${{ env.prerelease }}
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: 🚀 Create release
        uses: google-github-actions/release-please-action@v3
        id: release-please
        with:
          token: ${{ steps.generate_token.outputs.token }}
          release-type: node
          pull-request-title-pattern: 'chore: release v${version}'
          changelog-types: >
            [{"type":"feat","section":"🚀 Features","hidden":false},
            {"type":"fix","section":"🐛 Bug Fixes","hidden":false},
            {"type":"deps","section":"🌲 Dependencies","hidden":false},
            {"type":"docs","section":"📖 Documentation Improvements","hidden":false},
            {"type":"style","section":"🎨 Design Improvements","hidden":false},
            {"type":"ci","section":"⚙️ Continuous Integration Changes","hidden":true},
            {"type":"chore","section":"🧰 Maintenance","hidden":true}]
          prerelease: ${{ env.prerelease }}
          default-branch: ${{ github.ref_name }}
          release-as: ${{ steps.get-next-version.outputs.version }}

      - name: 🏷️ Tag major and minor versions
        if: ${{ steps.release-please.outputs.release_created && !env.prerelease }}
        run: |
          git config user.name "${{ secrets.UGRC_RELEASE_BOT_NAME }}"
          git config user.email "${{ secrets.UGRC_RELEASE_BOT_EMAIL }}"
          git remote add gh-token "https://${{ steps.generate_token.outputs.token }}@github.com/agrc/get-next-version-action.git"
          echo "deleting existing tags, if any"
          git tag -d v${{ steps.release-please.outputs.major }} || true
          git tag -d v${{ steps.release-please.outputs.major }}.${{ steps.release-please.outputs.minor }} || true
          git push origin :v${{ steps.release-please.outputs.major }} || true
          git push origin :v${{ steps.release-please.outputs.major }}.${{ steps.release-please.outputs.minor }} || true
          echo "creating new tags"
          git tag -a v${{ steps.release-please.outputs.major }} -m "Release v${{ steps.release-please.outputs.major }}"
          git tag -a v${{ steps.release-please.outputs.major }}.${{ steps.release-please.outputs.minor }} -m "Release v${{ steps.release-please.outputs.major }}.${{ steps.release-please.outputs.minor }}"
          git push origin v${{ steps.release-please.outputs.major }}
          git push origin v${{ steps.release-please.outputs.major }}.${{ steps.release-please.outputs.minor }}
